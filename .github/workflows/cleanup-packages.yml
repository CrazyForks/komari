name: Cleanup Old Packages

on:
  schedule:
    - cron: '0 0 * * 0'  # Run every Sunday at midnight
  workflow_dispatch:      # Allow manual trigger

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cleanup old packages
        uses: actions/github-script@v7
        with:
          script: |
            const { data: packages } = await github.rest.packages.getAllPackageVersionsForPackageOwnedByAuthenticatedUser({
              package_type: 'container',
              package_name: process.env.GITHUB_REPOSITORY.split('/')[1]
            });

            // Identify versions with only a single SHA tag (sha-<7 hex>) or sha256:<64 hex>
            // 或没有任何标签的版本
            const shaOrNoTagVersions = packages.filter(pkg => {
              const tags = pkg.metadata.container.tags;
              return (
                (tags.length === 1 && (
                  tags[0].match(/^sha-[0-9a-f]{7}$/) ||
                  tags[0].match(/^sha256:[0-9a-f]{64}$/)
                )) ||
                tags.length === 0
              );
            });

            // Delete the SHA-only or no-tag versions
            for (const version of shaOrNoTagVersions) {
              await github.rest.packages.deletePackageVersionForAuthenticatedUser({
                package_type: 'container',
                package_name: process.env.GITHUB_REPOSITORY.split('/')[1],
                package_version_id: version.id
              });
              console.log(`Deleted package version ${version.id} with tags: ${version.metadata.container.tags.join(', ') || 'none'}`);
            }