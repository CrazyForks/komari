name: Cleanup Old Packages

on:
  schedule:
    - cron: '0 0 * * 0'  # Run every Sunday at midnight
  workflow_dispatch:      # Allow manual trigger

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cleanup old packages
        uses: actions/github-script@v7
        with:
          script: |
            const { data: packages } = await github.rest.packages.getAllPackageVersionsForPackageOwnedByAuthenticatedUser({
              package_type: 'container',
              package_name: process.env.GITHUB_REPOSITORY.split('/')[1]
            });

            // Keep packages with 'dev' or 'latest' tags, plus the 10 most recent non-dev, non-latest versions
            const keepVersions = [
              // Keep packages with 'dev' tag
              ...packages.filter(pkg => pkg.metadata.container.tags.includes('dev')),
              // Keep packages with 'latest' tag, excluding those already included with 'dev'
              ...packages.filter(
                pkg =>
                  pkg.metadata.container.tags.includes('latest') &&
                  !pkg.metadata.container.tags.includes('dev')
              ),
              // Keep the 10 most recent non-dev, non-latest packages
              ...packages
                .filter(
                  pkg =>
                    !pkg.metadata.container.tags.includes('dev') &&
                    !pkg.metadata.container.tags.includes('latest')
                )
                .slice(0, 10),
            ];

            // Identify versions to delete (not in keepVersions)
            const deleteVersions = packages.filter(pkg => !keepVersions.includes(pkg));

            // Delete the versions
            for (const version of deleteVersions) {
              await github.rest.packages.deletePackageVersionForAuthenticatedUser({
                package_type: 'container',
                package_name: process.env.GITHUB_REPOSITORY.split('/')[1],
                package_version_id: version.id
              });
              console.log(`Deleted package version ${version.id}`);
            }
